// Generated by CoffeeScript 1.6.3
(function() {
  var connection;
  var mongo = require('mongodb');
  connection = require('../connection');

  module.exports.getById = function(req, res, next) {
	var id = req.params.id;
    return connection(function(db) {
		db.collection('lists', function(errCollection, collection) {
			collection.findOne({'_id':new mongo.BSONPure.ObjectID(id)}, function(err, item) {
				res.send(item);
			});
		});
    });
  };
  
  module.exports.getAllMine = function(req, res, next) {
    return connection(function(db) {
		db.collection('lists', function(errCollection, collection) {
			collection.find({rights: {$elemMatch:{user_id:"1", access:0}}}).toArray(function(err, items) {
				res.send(items);
			});
        });
    });
  };
  
  module.exports.getAllShared = function(req, res, next) {
    return connection(function(db) {
		db.collection('lists', function(errCollection, collection) {
			collection.find({rights: {$elemMatch:{user_id:"1", access:1}}}).toArray(function(err, items) {
				res.send(items);
			});
        });
    });
  };
  
  module.exports.add = function(req, res, next) {
    var list = req.body;
	list.rights = {user_id:"1",access:0};
	if (!list.createdAt)
		list.createdAt = new Date;
	return connection(function(db) {
		db.collection('lists', function(errCollection, collection) {
			collection.insert(list, {safe:true}, function(err, result) {
				if (err) {
					res.send({'error':'An error has occurred'});
				} else {
					console.log('Success: ' + JSON.stringify(result[0]));
					res.send(result[0]);
				}
			});
        });
    });
  };
  
  module.exports.update = function(req, res, next) {
	var id = req.params.id;
    var list = req.body;
	if (!list.updatedAt)
		list.updatedAt = new Date();
    return connection(function(db) {
		db.collection('lists', function(errCollection, collection) {
			collection.update({'_id':new mongo.BSONPure.ObjectID(id), rights: {$elemMatch: {user_id:"1"} } }, list, {safe:true}, function(err, result) {
				if (err) {
					console.log('Error updating list: ' + err);
					res.send({'error':'An error has occurred'});
				} else {
					console.log('' + result + ' document(s) updated');
					res.send(list);
				}
			});
		});
    });
  };
  
  module.exports.share = function(req, res, next) {
	var id = req.params.id;
	var user_id = req.params.user_id;
    return connection(function(db) {
		db.collection('lists', function(errCollection, collection) {
			collection.update({'_id':new mongo.BSONPure.ObjectID(id), rights: {$elemMatch: {user_id:"1"} } }, {$push: { rights: {user_id: user_id, access: 1} } }, {safe:true}, function(err, result) {
				if (err) {
					console.log('Error updating list: ' + err);
					res.send({'error':'An error has occurred'});
				} else {
					console.log('' + result + ' document(s) updated');
					res.send("list shared");
				}
			});
		});
    });
  };
  
  module.exports.remove = function(req, res, next) {
	var id = req.params.id;
    return connection(function(db) {
		db.collection('lists', function(errCollection, collection) {
			collection.remove({'_id':new mongo.BSONPure.ObjectID(id), rights: {$elemMatch: {user_id:"1", access:0} } }, {safe:true}, function(err, result) {
				if (err) {
					res.send({'error':'An error has occurred - ' + err});
				} else {
					console.log('' + result + ' document(s) deleted');
					res.send(req.body);
				}
			});
		});
    });
  };    

}).call(this);
